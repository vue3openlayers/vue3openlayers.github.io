import{d as a,o as e,c as n,e as t,w as s,a as o}from"./app.5655de5b.js";import{_ as l}from"./MapDemo.b73a8f15.js";const p=o('<h1 id="ol-map"><a class="header-anchor" href="#ol-map" aria-hidden="true">#</a> ol-map</h1><blockquote><p>The core component of Vue3 OpenLayers</p></blockquote><p>This is the main container for all other Vue3 OpenLayers components and has one <code>default</code> slot to place them all. Usually you will use it together with <code>ol-view</code> component to setup <code>zoom</code>, <code>center</code>, <code>projection</code> and other view related propeties for the map.</p>',3),c=o('<h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Example of a simple map.<br> See also documentation of <code>ol-view</code> component.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-map</span> <span class="token attr-name">:loadTilesWhileAnimating</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:loadTilesWhileInteracting</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>400px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-view</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:center</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rotation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rotation<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:zoom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zoom<span class="token punctuation">&quot;</span></span> \n    <span class="token attr-name">:projection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>projection<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-tile-layer</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-source-osm</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-tile-layer</span><span class="token punctuation">&gt;</span></span>\n    \n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-map</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    ref\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> center <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> projection <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;EPSG:4326&#39;</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> zoom <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> rotation <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            center<span class="token punctuation">,</span>\n            projection<span class="token punctuation">,</span>\n            zoom<span class="token punctuation">,</span>\n            rotation\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h1 id="loadtileswhileanimating"><a class="header-anchor" href="#loadtileswhileanimating" aria-hidden="true">#</a> loadTilesWhileAnimating</h1><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><p>When set to <code>true</code>, tiles will be loaded during animations.</p><h1 id="loadtileswhileinteracting"><a class="header-anchor" href="#loadtileswhileinteracting" aria-hidden="true">#</a> loadTilesWhileInteracting</h1><ul><li><strong>Type</strong>: <code>boolean</code></li><li><strong>Default</strong>: <code>false</code></li></ul><p>When set to <code>true</code>, tiles will be loaded while interacting with the map.</p><h1 id="movetolerance"><a class="header-anchor" href="#movetolerance" aria-hidden="true">#</a> moveTolerance</h1><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Default</strong>: <code>1</code></li></ul><p>The minimum distance in pixels the cursor must move to be detected as a map move event instead of a click. Increasing this value can make it easier to click on the map.</p><h1 id="pixelratio"><a class="header-anchor" href="#pixelratio" aria-hidden="true">#</a> pixelRatio</h1><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Default</strong>: <code>1</code></li></ul><p>The ratio between physical pixels and device-independent pixels (dips) on the device.</p><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>Pointer events that emits <a href="http://openlayers.org/en/latest/apidoc/module-ol_MapBrowserEvent-MapBrowserEvent.html" target="_blank" rel="noopener noreferrer"><code>ol.MapBrowserEvent</code></a></p><ul><li><code>click</code></li><li><code>dblclick</code></li><li><code>singleclick</code></li><li><code>pointerdrag</code></li><li><code>pointermove</code></li></ul><p>Other events that emit <a href="http://openlayers.org/en/latest/apidoc/module-ol_MapEvent-MapEvent.html" target="_blank" rel="noopener noreferrer"><code>ol.MapEvent</code></a></p><ul><li><code>movestart</code></li><li><code>moveend</code></li><li><code>postrender</code></li><li><code>precompose</code></li><li><code>postcompose</code></li></ul><h2 id="methods"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h1 id="focus"><a class="header-anchor" href="#focus" aria-hidden="true">#</a> focus()</h1><p>Triggers focus on map container.</p><h1 id="foreachfeatureatpixel-pixel-callback-options"><a class="header-anchor" href="#foreachfeatureatpixel-pixel-callback-options" aria-hidden="true">#</a> forEachFeatureAtPixel(pixel, callback, options = {})</h1><ul><li><strong>Arguments</strong>: <ul><li><code>pixel {number[]}</code></li><li><code>callback {function(ol.Feature, ?ol.layer.Layer): *}</code> Feature callback. The callback will be called with two arguments: OpenLayers <code>feature</code> at the pixel and <code>layer</code> of the feature (will be null for unmanaged layers). To stop detection, callback functions can return a truthy value.</li><li><code>[options] {Object | undefined}</code><ul><li><code>layerFilter {function(ol.layer.Layer): boolean}</code> Layer filter function.</li><li><code>hitTolerance {number | undefined}</code> Hit-detection tolerance in pixels. Default is <code>0</code>.</li></ul></li></ul></li><li><strong>Returns</strong>: <code>*</code> Truthy value returned from the callback.</li></ul><p>Detect features that intersect a pixel on the viewport, and execute a callback with each intersecting feature. Layers included in the detection can be configured through the <code>layerFilter</code> option in <code>options</code>.</p><h1 id="foreachlayeratpixel-pixel-callback-layerfilter"><a class="header-anchor" href="#foreachlayeratpixel-pixel-callback-layerfilter" aria-hidden="true">#</a> forEachLayerAtPixel(pixel, callback, layerFilter)</h1><ul><li><strong>Arguments</strong>: <ul><li><code>pixel {number[]}</code></li><li><code>callback {function(ol.layer.Layer, ?(number[] | Uint8Array)): *}</code> Layer callback. The callback will receive <code>layer</code> and array representing <code>[R, G, B, A]</code> pixel values. To stop detection, callback functions can return a truthy value.</li><li><code>[layerFilter] {function(ol.layer.Layer): boolean | undefined}</code> Layer filter function.</li></ul></li><li><strong>Returns</strong>: <code>*</code> Truthy value returned from the callback.</li></ul><p>Detect layers that have a color value at a pixel on the viewport, and execute a callback with each matching layer. Layers included in the detection can be configured through <code>layerFilter</code>.</p><h1 id="getcoordinatefrompixel-pixel"><a class="header-anchor" href="#getcoordinatefrompixel-pixel" aria-hidden="true">#</a> getCoordinateFromPixel(pixel)</h1><ul><li><strong>Arguments</strong>: <ul><li><code>pixel {number[]}</code></li></ul></li><li><strong>Returns</strong>: <code>number[]</code> Coordinates of the pixel in map view projection.</li></ul><p>Get the coordinate for a given pixel.</p><h1 id="refresh"><a class="header-anchor" href="#refresh" aria-hidden="true">#</a> refresh()</h1><ul><li><strong>Returns</strong>: <code>{Promise&lt;void&gt;}</code></li></ul><p>Updates map size and re-renders map.</p><h1 id="render"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render()</h1><ul><li><strong>Returns</strong>: <code>{Promise&lt;void&gt;}</code></li></ul><p>Request a map rendering (at the next animation frame).</p><h1 id="updatesize"><a class="header-anchor" href="#updatesize" aria-hidden="true">#</a> updateSize()</h1><p>Updates map size.</p>',42),i='{"title":"ol-map","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Properties","slug":"properties"},{"level":2,"title":"Events","slug":"events"},{"level":2,"title":"Methods","slug":"methods"}],"relativePath":"componentsguide/map/index.md","lastUpdated":1628604488307}',r={};const u=Object.assign(r,{expose:[],setup:function(o){return(o,i)=>{const r=a("ClientOnly");return e(),n("div",null,[p,t(r,null,{default:s((()=>[t(l)])),_:1}),c])}}});export default u;export{i as __pageData};
