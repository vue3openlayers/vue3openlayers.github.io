import{d as n,o as a,c as s,e as t,w as e,j as o,a as p}from"./app.ce43e203.js";import{_ as l}from"./VectorSourceDemo1.26eecd54.js";const c=t("h1",{id:"ol-vector-layer"},[t("a",{class:"header-anchor",href:"#ol-vector-layer","aria-hidden":"true"},"#"),o(" ol-vector-layer")],-1),r=t("p",null,"ol-vector-layer can render vector from various backend services. It should be used with together with ol-source-vector component.",-1),u=p('<h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Example below shows how you can use ol-vector-layer and ol-source-vector to render some vector features from remote backend.</p><p>Load features simply by providing url value and format GeoJSON</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-map</span> <span class="token attr-name">:loadTilesWhileAnimating</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:loadTilesWhileInteracting</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token style-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token style language-css"><span class="token property">height</span><span class="token punctuation">:</span>400px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-view</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>view<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:center</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>center<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:rotation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rotation<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:zoom</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>zoom<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:projection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>projection<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-tile-layer</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-source-osm</span> <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-tile-layer</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-vector-layer</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol-source-vector</span> <span class="token attr-name">:url</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:format</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>geoJson<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-source-vector</span><span class="token punctuation">&gt;</span></span>\n\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-vector-layer</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol-map</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span>\n    ref<span class="token punctuation">,</span>\n    inject\n<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> center <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> projection <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;EPSG:4326&#39;</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> zoom <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>\n        <span class="token keyword">const</span> rotation <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n        <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&quot;https://openlayers.org/en/latest/examples/data/geojson/countries.geojson&quot;</span><span class="token punctuation">)</span>\n\n        <span class="token keyword">const</span> format <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;ol-format&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>format<span class="token punctuation">)</span>\n        <span class="token keyword">const</span> geoJson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">format<span class="token punctuation">.</span>GeoJSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\n        <span class="token keyword">return</span> <span class="token punctuation">{</span>\n            center<span class="token punctuation">,</span>\n            projection<span class="token punctuation">,</span>\n            zoom<span class="token punctuation">,</span>\n            rotation<span class="token punctuation">,</span>\n            url<span class="token punctuation">,</span>\n            geoJson\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="properties"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h1 id="classname"><a class="header-anchor" href="#classname" aria-hidden="true">#</a> className</h1><ul><li><strong>Type</strong>: <code>string</code></li><li><strong>Default</strong>: <code>ol-layer</code></li></ul><p>A CSS class name to set to the layer element.</p><h1 id="opacity"><a class="header-anchor" href="#opacity" aria-hidden="true">#</a> opacity</h1><ul><li><strong>Type</strong>: <code>number </code></li><li><strong>Default</strong>: <code>1</code></li></ul><p>Opacity (0, 1).</p><h1 id="visible"><a class="header-anchor" href="#visible" aria-hidden="true">#</a> visible</h1><ul><li><strong>Type</strong>: <code>boolean </code></li><li><strong>Default</strong>: <code>true</code></li></ul><p>Visibility.</p><h1 id="extent"><a class="header-anchor" href="#extent" aria-hidden="true">#</a> extent</h1><ul><li><strong>Type</strong>: <code>Array</code></li></ul><p>The bounding extent for layer rendering. The layer will not be rendered outside of this extent.</p><h1 id="zindex"><a class="header-anchor" href="#zindex" aria-hidden="true">#</a> zIndex</h1><ul><li><strong>Type</strong>: <code>number</code></li></ul><p>The z-index for layer rendering. At rendering time, the layers will be ordered, first by Z-index and then by position.</p><h1 id="minresolution"><a class="header-anchor" href="#minresolution" aria-hidden="true">#</a> minResolution</h1><ul><li><strong>Type</strong>: <code>number</code></li></ul><p>The minimum resolution (inclusive) at which this layer will be visible.</p><h1 id="maxresolution"><a class="header-anchor" href="#maxresolution" aria-hidden="true">#</a> maxResolution</h1><ul><li><strong>Type</strong>: <code>number</code></li></ul><p>The maximum resolution (exclusive) below which this layer will be visible.</p><h1 id="minzoom"><a class="header-anchor" href="#minzoom" aria-hidden="true">#</a> minZoom</h1><ul><li><strong>Type</strong>: <code>number</code></li></ul><p>The minimum view zoom level (exclusive) above which this layer will be visible.</p><h1 id="maxzoom"><a class="header-anchor" href="#maxzoom" aria-hidden="true">#</a> maxZoom</h1><ul><li><strong>Type</strong>: <code>number</code></li></ul><p>The maximum view zoom level (inclusive) at which this layer will be visible.</p><h1 id="renderbuffer"><a class="header-anchor" href="#renderbuffer" aria-hidden="true">#</a> renderBuffer</h1><ul><li><strong>Type</strong>: <code>number</code></li><li><strong>Default</strong>: <code>100</code> The buffer in pixels around the viewport extent used by the renderer when getting features from the vector source for the rendering or hit-detection. Recommended value: the size of the largest symbol, line width or label.</li></ul><h1 id="updatewhileanimating"><a class="header-anchor" href="#updatewhileanimating" aria-hidden="true">#</a> updateWhileAnimating</h1><ul><li><strong>Type</strong>: <code>Boolean</code></li><li><strong>Default</strong>: <code>false</code> When set to true, feature batches will be recreated during animations. This means that no vectors will be shown clipped, but the setting will have a performance impact for large amounts of vector data. When set to false, batches will be recreated when no animation is active.</li></ul><h1 id="updatewhileinteracting"><a class="header-anchor" href="#updatewhileinteracting" aria-hidden="true">#</a> updateWhileInteracting</h1><ul><li><strong>Type</strong>: <code>Boolean</code></li><li><strong>Default</strong>: <code>false</code> When set to true, feature batches will be recreated during interactions. See also updateWhileAnimating.</li></ul>',39),i='{"title":"ol-vector-layer","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Properties","slug":"properties"}],"relativePath":"componentsguide/layers/vectorlayer/index.md","lastUpdated":1628604474846}',k={};const d=Object.assign(k,{expose:[],setup:function(o){return(o,p)=>{const i=n("ClientOnly");return a(),s("div",null,[c,r,t(i,null,{default:e((()=>[t(l)])),_:1}),u])}}});export default d;export{i as __pageData};
