import{r as n,d as a,o as s,c as t,w as p,e,F as o,g as c,j as l,a as u}from"./app.4dd796d2.js";import{m as i}from"./marker.4b23fbad.js";const r={setup:()=>({center:n([40,40]),projection:n("EPSG:4326"),zoom:n(5),rotation:n(0),markerIcon:i,getRandomInRange:(n,a,s)=>1*(Math.random()*(a-n)+n).toFixed(s),overrideStyleFunction:(n,a)=>{let s=n.get("features").length,t=s>20?"192,0,0":s>8?"255,128,0":"0,128,0";var p=Math.max(8,Math.min(s,20));let e=2*Math.PI*p/6,o=[0,e,e,e,e,e,e];a.getImage().getStroke().setLineDash(e),a.getImage().getStroke().setColor("rgba("+t+",0.5)"),a.getImage().getStroke().setLineDash(o),a.getImage().getFill().setColor("rgba("+t+",1)"),a.getImage().setRadius(p),a.getText().setText(s.toString())},featureSelected:n=>{console.log(n)}})};r.render=function(n,l,u,i,r,k){const g=a("ol-view"),d=a("ol-source-osm"),h=a("ol-tile-layer"),m=a("ol-style-stroke"),f=a("ol-style-fill"),y=a("ol-style-icon"),q=a("ol-style"),v=a("ol-interaction-clusterselect"),b=a("ol-geom-point"),w=a("ol-feature"),x=a("ol-source-vector"),T=a("ol-style-circle"),S=a("ol-style-text"),I=a("ol-animated-clusterlayer"),z=a("ol-map");return s(),t(z,{loadTilesWhileAnimating:!0,loadTilesWhileInteracting:!0,style:{height:"400px"}},{default:p((()=>[e(g,{ref:"view",center:i.center,rotation:i.rotation,zoom:i.zoom,projection:i.projection},null,8,["center","rotation","zoom","projection"]),e(h,null,{default:p((()=>[e(d)])),_:1}),e(v,{onSelect:i.featureSelected,pointRadius:20},{default:p((()=>[e(q,null,{default:p((()=>[e(m,{color:"green",width:5}),e(f,{color:"rgba(255,255,255,0.5)"}),e(y,{src:i.markerIcon,scale:.05},null,8,["src","scale"])])),_:1})])),_:1},8,["onSelect"]),e(I,{animationDuration:500,distance:40},{default:p((()=>[e(x,{ref:"vectorsource"},{default:p((()=>[(s(),t(o,null,c(500,(n=>e(w,{key:n},{default:p((()=>[e(b,{coordinates:[i.getRandomInRange(24,45,3),i.getRandomInRange(35,41,3)]},null,8,["coordinates"])])),_:2},1024))),64))])),_:1},512),e(q,{overrideStyleFunction:i.overrideStyleFunction},{default:p((()=>[e(m,{color:"red",width:2}),e(f,{color:"rgba(255,255,255,0.1)"}),e(T,{radius:20},{default:p((()=>[e(m,{color:"black",width:15,lineDash:[],lineCap:"butt"}),e(f,{color:"black"})])),_:1}),e(S,null,{default:p((()=>[e(f,{color:"white"})])),_:1})])),_:1},8,["overrideStyleFunction"])])),_:1})])),_:1})};const k=e("h1",{id:"ol-animated-clusterlayer"},[e("a",{class:"header-anchor",href:"#ol-animated-clusterlayer","aria-hidden":"true"},"#"),l(" ol-animated-clusterlayer")],-1),g=e("p",null,"ol-animated-clusterlayer is a layer that animates clusters on zoom change. ol-interaction-clusterselect. is a select interaction. On select cluster springs apart to reveal the features. The revealed features are themselves selectable. Revealed features are themselves a cluster with an attribute 'features' that contain the original feature.",-1),d=u('',37),h='{"title":"ol-animated-clusterlayer","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Properties","slug":"properties"}],"relativePath":"componentsguide/layers/animatedclusterlayer/index.md","lastUpdated":1645894249856}',m={};const f=Object.assign(m,{expose:[],setup:function(n){return(n,o)=>{const c=a("ClientOnly");return s(),t("div",null,[k,g,e(c,null,{default:p((()=>[e(r)])),_:1}),d])}}});export default f;export{h as __pageData};
